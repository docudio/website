{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(apiCaller);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getAuthorizationHeader, getAuthToken, setAuthToken, removeAuthToken } from '../utils';\nimport { call, put } from 'redux-saga/effects';\nimport authAgent from '../app/auth-agent';\nimport { ACCESS_TOKEN_FAILURE } from '../../actions/auth';\nexport default function apiCaller(request, _ref) {\n  var _ref$headers, headers, rest, token, authorizeHeader, props, response, refreshedToken;\n\n  return _regeneratorRuntime.wrap(function apiCaller$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref$headers = _ref.headers, headers = _ref$headers === void 0 ? {} : _ref$headers, rest = _objectWithoutProperties(_ref, [\"headers\"]);\n          _context.next = 3;\n          return call(getAuthToken);\n\n        case 3:\n          token = _context.sent;\n          _context.next = 6;\n          return call(getAuthorizationHeader, token.access_token);\n\n        case 6:\n          authorizeHeader = _context.sent;\n          props = _objectSpread(_objectSpread({}, rest), {}, {\n            headers: _objectSpread(_objectSpread(_objectSpread({}, headers), authorizeHeader), {}, {\n              token: token.access_token\n            })\n          });\n          _context.prev = 8;\n          _context.next = 11;\n          return call(request, props);\n\n        case 11:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response || {});\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](8);\n\n          if (!(_context.t0.status === 401)) {\n            _context.next = 42;\n            break;\n          }\n\n          _context.prev = 18;\n          _context.next = 21;\n          return call(authAgent.Auth.refreshAccessToken, token.refresh_token);\n\n        case 21:\n          refreshedToken = _context.sent;\n\n          if (!refreshedToken) {\n            _context.next = 28;\n            break;\n          }\n\n          _context.next = 25;\n          return call(setAuthToken, refreshedToken.data);\n\n        case 25:\n          _context.next = 27;\n          return call(apiCaller, request, props);\n\n        case 27:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 28:\n          _context.next = 40;\n          break;\n\n        case 30:\n          _context.prev = 30;\n          _context.t1 = _context[\"catch\"](18);\n\n          if (!(_context.t1.status === 400)) {\n            _context.next = 39;\n            break;\n          }\n\n          _context.next = 35;\n          return call(removeAuthToken);\n\n        case 35:\n          _context.next = 37;\n          return put({\n            type: ACCESS_TOKEN_FAILURE,\n            payload: _context.t1.message\n          });\n\n        case 37:\n          _context.next = 40;\n          break;\n\n        case 39:\n          throw _context.t1;\n\n        case 40:\n          _context.next = 43;\n          break;\n\n        case 42:\n          throw _context.t0;\n\n        case 43:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[8, 15], [18, 30]]);\n}","map":null,"metadata":{},"sourceType":"module"}