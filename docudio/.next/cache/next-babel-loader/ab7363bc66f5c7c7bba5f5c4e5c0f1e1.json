{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport { SheetsRegistry } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { createGenerateClassName } from '@material-ui/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green'; // A theme with custom primary and secondary color.\n// It's optional.\n\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700]\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction createPageContext() {\n  return {\n    theme: theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName()\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!true) {\n    return createPageContext();\n  } // Reuse context on the client-side.\n\n\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/src/getPageContext.js"],"names":["SheetsRegistry","createMuiTheme","createGenerateClassName","purple","green","theme","palette","primary","light","main","dark","secondary","typography","useNextVariants","createPageContext","sheetsManager","Map","sheetsRegistry","generateClassName","getPageContext","global","__INIT_MATERIAL_UI__"],"mappings":"AAAA;AAEA,SAASA,cAAT,QAA+B,KAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,KAAP,MAAkB,gCAAlB,C,CAEA;AACA;;AACA,IAAMC,KAAK,GAAGJ,cAAc,CAAC;AAC3BK,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEL,MAAM,CAAC,GAAD,CADN;AAEPM,MAAAA,IAAI,EAAEN,MAAM,CAAC,GAAD,CAFL;AAGPO,MAAAA,IAAI,EAAEP,MAAM,CAAC,GAAD;AAHL,KADF;AAMPQ,IAAAA,SAAS,EAAE;AACTH,MAAAA,KAAK,EAAEJ,KAAK,CAAC,GAAD,CADH;AAETK,MAAAA,IAAI,EAAEL,KAAK,CAAC,GAAD,CAFF;AAGTM,MAAAA,IAAI,EAAEN,KAAK,CAAC,GAAD;AAHF;AANJ,GADkB;AAa3BQ,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AADP;AAbe,CAAD,CAA5B;;AAkBA,SAASC,iBAAT,GAA6B;AAC3B,SAAO;AACLT,IAAAA,KAAK,EAALA,KADK;AAEL;AACAU,IAAAA,aAAa,EAAE,IAAIC,GAAJ,EAHV;AAIL;AACAC,IAAAA,cAAc,EAAE,IAAIjB,cAAJ,EALX;AAML;AACAkB,IAAAA,iBAAiB,EAAEhB,uBAAuB;AAPrC,GAAP;AASD;;AAED,eAAe,SAASiB,cAAT,GAA0B;AACvC;AACA;AACA,MAAI,KAAJ,EAAsB;AACpB,WAAOL,iBAAiB,EAAxB;AACD,GALsC,CAOvC;;;AACA,MAAI,CAACM,MAAM,CAACC,oBAAZ,EAAkC;AAChCD,IAAAA,MAAM,CAACC,oBAAP,GAA8BP,iBAAiB,EAA/C;AACD;;AAED,SAAOM,MAAM,CAACC,oBAAd;AACD","sourcesContent":["/* eslint-disable no-underscore-dangle */\n\nimport { SheetsRegistry } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { createGenerateClassName } from '@material-ui/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}"]},"metadata":{},"sourceType":"module"}