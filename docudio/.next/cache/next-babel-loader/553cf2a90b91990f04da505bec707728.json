{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport { Grid, IconButton, CssBaseline, Button, Avatar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport PageLinks from '../utils/PageLinks';\nimport { loadApp } from '../actions';\nimport Home from '../sharedComponents/home';\nimport DarkModeToggle from '../utils/DarkModeToggle';\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1\n    },\n    body: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '90vh'\n    },\n    copyright: {\n      marginTop: 'auto'\n    },\n    title: {\n      flexGrow: 1\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3)\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7)\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar\n  };\n});\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, 'Copyright © ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://www.docudio.com/\"\n  }, \"Docudio\"), ' ', new Date().getFullYear(), '.');\n}\n\nexport default function Dashboard() {\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var appLoaded = true;\n  var router = useRouter();\n  useEffect(function () {\n    if (!appLoaded) {\n      dispatch(loadApp());\n    }\n  }, [dispatch, appLoaded]);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Home, null);\n}","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/pages/index.js"],"names":["React","useEffect","makeStyles","Drawer","Box","AppBar","Toolbar","Typography","Divider","Link","Grid","IconButton","CssBaseline","Button","Avatar","clsx","MenuIcon","ChevronLeftIcon","useRouter","useDispatch","PageLinks","loadApp","Home","DarkModeToggle","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","body","flexDirection","minHeight","copyright","marginTop","title","small","spacing","height","large","toolbar","mixins","Copyright","Date","getFullYear","Dashboard","classes","dispatch","appLoaded","router","useState","open","setOpen","handleDrawerOpen","handleDrawerClose"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Box from '@material-ui/core/Box'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\n\nimport Link from '@material-ui/core/Link'\nimport { Grid, IconButton, CssBaseline, Button, Avatar } from '@material-ui/core'\nimport clsx from 'clsx'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport { useRouter } from 'next/router'\nimport { useDispatch } from 'react-redux'\nimport PageLinks from '../utils/PageLinks'\nimport { loadApp } from '../actions'\nimport Home from '../sharedComponents/home'\nimport DarkModeToggle from '../utils/DarkModeToggle'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1\n  },\n  body: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '90vh'\n  },\n  copyright: {\n    marginTop: 'auto'\n  },\n  title: {\n    flexGrow: 1\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar\n}))\n\nfunction Copyright () {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://www.docudio.com/'>\n        Docudio\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nexport default function Dashboard () {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const appLoaded = true\n  const router = useRouter()\n  useEffect(() => {\n    if (!appLoaded) {\n      dispatch(loadApp())\n    }\n  }, [dispatch, appLoaded])\n  const [open, setOpen] = React.useState(true)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  return (\n          <Home />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}