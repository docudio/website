{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watcherSaga);\n\nimport { takeEvery, takeLeading } from 'redux-saga/effects';\nimport { API_ERRORED, APP_LOAD } from '../../actions';\nimport app from './app';\nimport { ACCESS_TOKEN_REQUEST, LOGOUT_REQUEST, TOKEN_INFO_REQUEST, TRUSTED_CLAIMS_SUCCESS } from '../../actions/auth';\nimport { THEME_UPDATE } from '../../actions/theme';\nimport auth from './auth';\nimport { setDarkModePreference } from '../utils';\nexport default function watcherSaga() {\n  return _regeneratorRuntime.wrap(function watcherSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(API_ERRORED, app.sendErrorMessage);\n\n        case 2:\n          _context.next = 4;\n          return takeLeading(APP_LOAD, app.handleAppLoad);\n\n        case 4:\n          _context.next = 6;\n          return takeLeading(ACCESS_TOKEN_REQUEST, auth.fetchAccessToken);\n\n        case 6:\n          _context.next = 8;\n          return takeEvery(LOGOUT_REQUEST, auth.clearSession);\n\n        case 8:\n          _context.next = 10;\n          return takeEvery(THEME_UPDATE, setDarkModePreference);\n\n        case 10:\n          _context.next = 12;\n          return takeLeading(TOKEN_INFO_REQUEST, auth.fetchTokenInfo);\n\n        case 12:\n          _context.next = 14;\n          return takeLeading(TRUSTED_CLAIMS_SUCCESS, auth.fetchAuthUserDetails);\n\n        case 14:\n          _context.next = 16;\n          return takeLeading(TRUSTED_CLAIMS_SUCCESS, auth.fetchEmployeeType);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}