{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watcherSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(submitSignup);\n\nimport { takeLeading, call, put } from 'redux-saga/effects';\nimport agent from './agent';\nimport { SIGNUP_REQUESTED, SIGNUP_SUCCESS, SIGNUP_FAILURE } from '../../../actions/signup';\nimport apiCaller from '../api-caller';\nimport app from '../../app/app';\nimport { ADD_MESSAGE } from '../../../actions';\nexport default function watcherSaga() {\n  return _regeneratorRuntime.wrap(function watcherSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLeading(SIGNUP_REQUESTED, submitSignup);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction submitSignup(action) {\n  var payload;\n  return _regeneratorRuntime.wrap(function submitSignup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put({\n            type: ADD_MESSAGE,\n            payload: {\n              message: 'Request is being Submitted',\n              options: {\n                variant: 'info'\n              }\n            }\n          });\n\n        case 3:\n          _context2.next = 5;\n          return call(apiCaller, agent.Signup.submitSignup, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(action.payload)\n          });\n\n        case 5:\n          payload = _context2.sent;\n          _context2.next = 8;\n          return put({\n            type: ADD_MESSAGE,\n            payload: {\n              message: 'Request Submitted Successfully!',\n              options: {\n                variant: 'success'\n              }\n            }\n          });\n\n        case 8:\n          _context2.next = 10;\n          return put({\n            type: SIGNUP_SUCCESS,\n            payload: payload.data\n          });\n\n        case 10:\n          _context2.next = 18;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 16;\n          return put({\n            type: SIGNUP_FAILURE,\n            payload: {\n              message: 'Signup failed, please contact docudio@gmail.com if this persists after refreshing your page'\n            }\n          });\n\n        case 16:\n          _context2.next = 18;\n          return call(app.sendErrorMessage, _context2.t0);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 12]]);\n}","map":null,"metadata":{},"sourceType":"module"}