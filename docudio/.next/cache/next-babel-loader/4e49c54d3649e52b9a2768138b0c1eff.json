{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '../index.css';\nimport store from '../store/index';\nimport { BrowserRouter } from 'react-router-dom';\nimport apm from '../rum';\nimport '../App.css';\nimport { MakeStore, createWrapper, Context } from 'next-redux-wrapper';\nimport Dashboard from './index';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport withRedux from \"next-redux-wrapper\";\nimport { SnackbarProvider } from 'notistack';\nimport Notifier from '../utils/Notifier';\nimport { withRouter } from 'next/router';\nimport App from 'next/app';\nimport { wrapper } from \"../store\";\nimport { AppInitialProps, AppContext } from 'next/app';\nimport { END } from 'redux-saga';\napm.setInitialPageLoadName('Self Service Landing Page');\n\nfunction WrappedApp(props) {\n  var getInitialProps = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var Component, ctx, pageProps, theme, notistackRef, onClickDismiss;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              _context.t0 = _objectSpread;\n              _context.t1 = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return Component.getInitialProps(ctx);\n\n            case 6:\n              _context.t2 = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 9:\n              _context.t2 = {};\n\n            case 10:\n              _context.t3 = _context.t2;\n              pageProps = (0, _context.t0)(_context.t1, _context.t3);\n              theme = React.useMemo(function () {\n                return createMuiTheme({\n                  palette: {\n                    type: true === true ? 'dark' : 'light',\n                    primary: {\n                      main: red[600]\n                    },\n                    secondary: {\n                      main: orange[800]\n                    }\n                  }\n                });\n              }, [true]);\n              notistackRef = /*#__PURE__*/React.createRef();\n\n              onClickDismiss = function onClickDismiss(key) {\n                return function () {\n                  notistackRef.current.closeSnackbar(key);\n                };\n              }; // 2. Stop the saga if on server\n\n\n              return _context.abrupt(\"return\", /*#__PURE__*/React.createElement(ThemeProvider, {\n                theme: theme\n              }, /*#__PURE__*/React.createElement(SnackbarProvider, {\n                ref: notistackRef,\n                action: function action(key) {\n                  return /*#__PURE__*/React.createElement(Button, {\n                    onClick: onClickDismiss(key)\n                  }, \"Dismiss\");\n                },\n                maxSnack: 3\n              }, /*#__PURE__*/React.createElement(Component, pageProps), \"      \")));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getInitialProps(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nexport default wrapper.withRedux(WrappedApp);\napm.setInitialPageLoadName('Self Service Landing Page'); //makeStore function that returns a new store for every request","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/pages/_app.js"],"names":["React","ReactDOM","Provider","store","BrowserRouter","apm","MakeStore","createWrapper","Context","Dashboard","ThemeProvider","createMuiTheme","Button","useSelector","withRedux","SnackbarProvider","Notifier","withRouter","App","wrapper","AppInitialProps","AppContext","END","setInitialPageLoadName","WrappedApp","props","getInitialProps","Component","ctx","pageProps","theme","useMemo","palette","type","primary","main","red","secondary","orange","notistackRef","createRef","onClickDismiss","key","current","closeSnackbar"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport '../index.css'\nimport store from '../store/index'\nimport { BrowserRouter } from 'react-router-dom'\nimport apm from '../rum'\nimport '../App.css'\nimport {MakeStore, createWrapper, Context} from 'next-redux-wrapper';\nimport Dashboard from './index'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport withRedux from \"next-redux-wrapper\";\nimport { SnackbarProvider } from 'notistack'\nimport Notifier from '../utils/Notifier'\nimport { withRouter } from 'next/router'\nimport App from 'next/app';\nimport { wrapper } from \"../store\";\nimport {AppInitialProps, AppContext} from 'next/app';\nimport {END} from 'redux-saga';\n\napm.setInitialPageLoadName('Self Service Landing Page')\n\nfunction WrappedApp (props){\n     const getInitialProps = async ({Component, ctx}: AppContext) => {\n        // 1. Wait for all page actions to dispatch\n        const pageProps = {\n            ...(Component.getInitialProps ? await Component.getInitialProps(ctx) : {}),\n        };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: true === true ? 'dark' : 'light',\n          primary: { main: red[600] },\n          secondary: { main: orange[800] }\n        }\n      }),\n    [true]\n  )\n  const notistackRef = React.createRef()\n  const onClickDismiss = key => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n        // 2. Stop the saga if on server\n       \n\n    \n\n        return     (    <ThemeProvider theme={theme}>\n\n      <SnackbarProvider ref={notistackRef} action={(key) => (\n        <Button onClick={onClickDismiss(key)}>\n            Dismiss\n        </Button>\n      )}\n      maxSnack={3} >\n\n<Component {...pageProps} />      </SnackbarProvider >\n\n    </ThemeProvider>)\n\n\n    \n}}\n\nexport default wrapper.withRedux(WrappedApp);\n\napm.setInitialPageLoadName('Self Service Landing Page')\n//makeStore function that returns a new store for every request\n\n"]},"metadata":{},"sourceType":"module"}