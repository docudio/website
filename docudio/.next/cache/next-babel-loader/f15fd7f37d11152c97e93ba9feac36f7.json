{"ast":null,"code":"import { requests } from '../../agent';\nvar port = process.env.port === '3001' ? '3000' : '443';\nvar protocol = process.env.port === '3001' ? 'http' : 'https';\nvar API_ROOT = protocol + '://' + process.env.hostname + ':' + port;\nvar ROOT_AUTH_URI = process.env.REACT_APP_APIGW + '/auth/oauth/v2';\nvar TRUSTED_CLAIMS_URI = process.env.REACT_APP_APIGW + '/auth/oauth/v2/tokeninfo';\nvar USER_ROOT = '/api/docudio/v1/groups/';\nvar USER_SEARCH_ROOT = '/api/docudio/v1/ldap/users'; // Used strictly for local development and reverse proxying requests\n\nvar portlocal = process.env.port === '3001' ? '3000' : '443';\nvar NGINX_API_ROOT = process.env.protocol + '//' + process.env.hostname + ':' + portlocal;\nvar AUTH_PARMS = {\n  client_id: '',\n  redirect_uri: process.env.protocol + '//' + process.env.hostname + ':' + process.env.port + '/auth',\n  code_challenge_method: 'S256',\n  response_type: 'code',\n  scope: ''\n};\nvar User = {\n  getUser: function getUser(options) {\n    return requests.get(\"\".concat(NGINX_API_ROOT).concat(USER_ROOT).concat(options.user, \"/isValid\"), options);\n  },\n  userSearch: function userSearch(options) {\n    return requests.get(\"\".concat(NGINX_API_ROOT).concat(USER_SEARCH_ROOT).concat(options.user), options);\n  }\n};\nexport default {\n  User: User\n};","map":null,"metadata":{},"sourceType":"module"}