{"ast":null,"code":"import { MakeStore, createWrapper, Context } from \"next-redux-wrapper\";\nimport combineReducers from \"../reducers/reducer\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas/root-saga';\nvar initialiseSagaMiddleware = createSagaMiddleware();\nvar storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport var makeStore = function makeStore(context) {\n  return createStore(combineReducers, storeEnhancers(applyMiddleware(initialiseSagaMiddleware)));\n};\nexport var wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/store/index.js"],"names":["MakeStore","createWrapper","Context","combineReducers","createStore","applyMiddleware","compose","createSagaMiddleware","rootSaga","initialiseSagaMiddleware","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","makeStore","context","wrapper","debug"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,aAApB,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,IAAMC,wBAAwB,GAAGF,oBAAoB,EAArD;AACA,IAAMG,cAAc,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAtE;AAEA,OAAO,IAAMO,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,OAAD;AAAA,SAClCV,WAAW,CAACD,eAAD,EAAkBO,cAAc,CAACL,eAAe,CAACI,wBAAD,CAAhB,CAAhC,CADuB;AAAA,CAA7B;AAGP,OAAO,IAAMM,OAAO,GAAGd,aAAa,CAACY,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { MakeStore, createWrapper, Context } from \"next-redux-wrapper\";\nimport combineReducers from \"../reducers/reducer\";\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from '../sagas/root-saga'\n\nconst initialiseSagaMiddleware = createSagaMiddleware()\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const makeStore: MakeStore = (context: Context) =>\n  createStore(combineReducers, storeEnhancers(applyMiddleware(initialiseSagaMiddleware)));\n\nexport const wrapper = createWrapper(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}