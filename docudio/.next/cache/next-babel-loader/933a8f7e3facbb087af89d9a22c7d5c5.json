{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchAccessToken),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(clearSession),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchUserClaims),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchAuthUserDetails),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(fetchTokenInfo),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(fetchEmployeeType);\n\nimport { call, put } from 'redux-saga/effects';\nimport agent from './auth-agent';\nimport userAgent from '../api/users/agent';\nimport { ACCESS_TOKEN_SUCCESS, LOGOUT_SUCCESS, TRUSTED_CLAIMS_FAILURE, TRUSTED_CLAIMS_SUCCESS, TOKEN_INFO_REQUEST, AUTH_USER_DETAILS_SUCCESS, USER_TYPE_SEARCH_SUCCESS, USER_TYPE_SEARCH_FAILURE } from '../../actions/auth';\nimport { setAuthToken, getAuthToken, decodeTrustedClaims } from '../utils';\nimport apiCaller from '../api/api-caller';\nimport app from './app';\n\nfunction fetchAccessToken(action) {\n  var payload;\n  return _regeneratorRuntime.wrap(function fetchAccessToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(agent.Auth.getAccessToken, action.payload);\n\n        case 3:\n          payload = _context.sent;\n          _context.next = 6;\n          return call(setAuthToken, payload.data);\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ACCESS_TOKEN_SUCCESS,\n            payload: payload.data\n          });\n\n        case 8:\n          _context.next = 10;\n          return call(fetchUserClaims);\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return call(app.sendErrorMessage, _context.t0);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction clearSession() {\n  var token;\n  return _regeneratorRuntime.wrap(function clearSession$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(getAuthToken);\n\n        case 3:\n          token = _context2.sent;\n          _context2.next = 6;\n          return call(agent.Auth.clearSession, token);\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: LOGOUT_SUCCESS\n          });\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return call(app.sendErrorMessage, _context2.t0);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction fetchUserClaims() {\n  var response, trustedClaims;\n  return _regeneratorRuntime.wrap(function fetchUserClaims$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(apiCaller, agent.Auth.getTrustedClaims, {\n            headers: {}\n          });\n\n        case 3:\n          response = _context3.sent;\n          _context3.next = 6;\n          return call(decodeTrustedClaims, response.data);\n\n        case 6:\n          trustedClaims = _context3.sent;\n          _context3.next = 9;\n          return put({\n            type: TRUSTED_CLAIMS_SUCCESS,\n            payload: trustedClaims\n          });\n\n        case 9:\n          _context3.next = 17;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put({\n            type: TRUSTED_CLAIMS_FAILURE,\n            payload: _context3.t0\n          });\n\n        case 15:\n          _context3.next = 17;\n          return call(app.sendErrorMessage, _context3.t0);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\n\nfunction fetchAuthUserDetails(action) {\n  var payload;\n  return _regeneratorRuntime.wrap(function fetchAuthUserDetails$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(apiCaller, userAgent.User.getUser, {\n            headers: {},\n            user: action.payload.claims.uid\n          });\n\n        case 3:\n          payload = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: AUTH_USER_DETAILS_SUCCESS,\n            payload: payload.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return call(app.sendErrorMessage, _context4.t0);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction fetchTokenInfo() {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchTokenInfo$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(apiCaller, agent.Auth.getTokenInfo, {\n            headers: {}\n          });\n\n        case 3:\n          response = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: TOKEN_INFO_REQUEST,\n            payload: response\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return call(app.sendErrorMessage, _context5.t0);\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction fetchEmployeeType() {\n  var payload;\n  return _regeneratorRuntime.wrap(function fetchEmployeeType$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(apiCaller, userAgent.User.fetchEmployeeType, {\n            headers: {}\n          });\n\n        case 3:\n          payload = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: USER_TYPE_SEARCH_SUCCESS,\n            payload: payload.data\n          });\n\n        case 6:\n          _context6.next = 14;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: USER_TYPE_SEARCH_FAILURE,\n            payload: {}\n          });\n\n        case 12:\n          _context6.next = 14;\n          return call(app.sendErrorMessage, _context6.t0);\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nexport default {\n  fetchUserClaims: fetchUserClaims,\n  fetchAccessToken: fetchAccessToken,\n  fetchTokenInfo: fetchTokenInfo,\n  fetchAuthUserDetails: fetchAuthUserDetails,\n  fetchEmployeeType: fetchEmployeeType,\n  clearSession: clearSession\n};","map":null,"metadata":{},"sourceType":"module"}