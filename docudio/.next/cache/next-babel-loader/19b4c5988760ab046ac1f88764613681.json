{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _s = $RefreshSig$();\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '../index.css';\nimport store from '../store/index';\nimport * as serviceWorker from '../serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport apm from '../rum';\nimport '../App.css';\nimport { MakeStore, createWrapper, Context } from 'next-redux-wrapper';\nimport Dashboard from './index';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport withRedux from \"next-redux-wrapper\";\nimport { SnackbarProvider } from 'notistack';\nimport Notifier from '../utils/Notifier';\nimport { withRouter } from 'next/router';\nimport App from 'next/app';\napm.setInitialPageLoadName('Self Service Landing Page');\n\nfunction MyTrueApp() {\n  _s();\n\n  var ThemePreference = useSelector(function (state) {\n    return state.theme.preferred;\n  });\n  var theme = React.useMemo(function () {\n    return createMuiTheme({\n      palette: {\n        type: ThemePreference === true ? 'dark' : 'light',\n        primary: {\n          main: '#000000'\n        },\n        secondary: {\n          main: '#dbdbdb'\n        }\n      },\n      typography: {\n        fontFamily: ['Montserrat'].join(',')\n      }\n    });\n  }, [ThemePreference]);\n  theme.typography.subtitle1 = {\n    'font-family': ['Hammersmith One', 'sans-serif']\n  };\n  theme.typography.subtitle2 = {\n    'font-family': ['Hammersmith One', 'sans-serif']\n  };\n  var notistackRef = /*#__PURE__*/React.createRef();\n\n  var onClickDismiss = function onClickDismiss(key) {\n    return function () {\n      notistackRef.current.closeSnackbar(key);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(SnackbarProvider, {\n    ref: notistackRef,\n    action: function action(key) {\n      return /*#__PURE__*/React.createElement(Button, {\n        onClick: onClickDismiss(key)\n      }, \"Dismiss\");\n    },\n    maxSnack: 3\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\"\n  }, /*#__PURE__*/React.createElement(Dashboard, null)), /*#__PURE__*/React.createElement(Notifier, null)));\n}\n\n_s(MyTrueApp, \"1+rE73TuoimbYw0bg0s/lj1Kwok=\", false, function () {\n  return [useSelector];\n});\n\n_c = MyTrueApp;\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      console.log(pageProps);\n      return /*#__PURE__*/React.createElement(Provider, {\n        store: store\n      }, /*#__PURE__*/React.createElement(MyTrueApp, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n\n                if (!Component.getInitialProps) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return Component.getInitialProps(ctx);\n\n              case 4:\n                _context.t0 = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                _context.t0 = {};\n\n              case 8:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\napm.setInitialPageLoadName('Self Service Landing Page'); //makeStore function that returns a new store for every request\n\nvar makeStore = function makeStore() {\n  return createWrapper(store);\n}; //withRedux wrapper that passes the store to the App Component\n\n\nexport default wrapper.withRedux(makeStore)(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTrueApp\");","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/pages/_app.js"],"names":["React","ReactDOM","Provider","store","serviceWorker","BrowserRouter","apm","MakeStore","createWrapper","Context","Dashboard","ThemeProvider","createMuiTheme","Button","useSelector","withRedux","SnackbarProvider","Notifier","withRouter","App","setInitialPageLoadName","MyTrueApp","ThemePreference","state","theme","preferred","useMemo","palette","type","primary","main","secondary","typography","fontFamily","join","subtitle1","subtitle2","notistackRef","createRef","onClickDismiss","key","current","closeSnackbar","MyApp","props","Component","pageProps","console","log","ctx","getInitialProps","makeStore","wrapper"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport '../index.css'\nimport store from '../store/index'\nimport * as serviceWorker from '../serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport apm from '../rum'\nimport '../App.css'\nimport {MakeStore, createWrapper, Context} from 'next-redux-wrapper';\nimport Dashboard from './index'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport withRedux from \"next-redux-wrapper\";\nimport { SnackbarProvider } from 'notistack'\nimport Notifier from '../utils/Notifier'\nimport { withRouter } from 'next/router'\nimport App from 'next/app';\n\napm.setInitialPageLoadName('Self Service Landing Page')\n\nfunction MyTrueApp () {\n\n\n  const ThemePreference = useSelector(state => state.theme.preferred)\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: ThemePreference === true ? 'dark' : 'light',\n          primary: { main: '#000000' },\n          secondary: { main: '#dbdbdb' }\n        },\n        typography: { fontFamily: ['Montserrat'].join(',') }\n      }),\n    [ThemePreference]\n  )\n  theme.typography.subtitle1 = { 'font-family': ['Hammersmith One', 'sans-serif'] }\n  theme.typography.subtitle2 = { 'font-family': ['Hammersmith One', 'sans-serif'] }\n\n  const notistackRef = React.createRef()\n  const onClickDismiss = key => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n\n      <SnackbarProvider ref={notistackRef} action={(key) => (\n        <Button onClick={onClickDismiss(key)}>\n            Dismiss\n        </Button>\n      )}\n      maxSnack={3} >\n\n        <div className='App'>\n          <Dashboard />\n        </div>\n        <Notifier />\n      </SnackbarProvider >\n\n    </ThemeProvider>\n  )\n}\nclass MyApp extends App {\n\n    static async getInitialProps({Component, ctx}) {\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        //Anything returned here can be accessed by the client\n        return {pageProps: pageProps};\n    }\n\n    render() {\n        //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n        const {Component, pageProps, store} = this.props;\nconsole.log(pageProps)\n        return (\n    <Provider store={store}>\n      <MyTrueApp {...pageProps}/>\n    </Provider>\n        );\n    }\n}\n\napm.setInitialPageLoadName('Self Service Landing Page')\n//makeStore function that returns a new store for every request\nconst makeStore = () => createWrapper(store);\n\n//withRedux wrapper that passes the store to the App Component\nexport default wrapper.withRedux(makeStore)(MyApp);\n\n"]},"metadata":{},"sourceType":"module"}