{"ast":null,"code":"import { requests } from '../../agent';\nvar port = window.env.port === '3001' ? '3000' : '443';\nvar protocol = window.env.port === '3001' ? 'http' : 'https';\nvar API_ROOT = protocol + '://' + window.env.hostname + ':' + port;\nvar ROOT_AUTH_URI = window.env.REACT_APP_APIGW + '/auth/oauth/v2';\nvar TRUSTED_CLAIMS_URI = window.env.REACT_APP_APIGW + '/auth/oauth/v2/tokeninfo';\nvar USER_ROOT = '/api/docudio/v1/';\nvar USER_SEARCH_ROOT = '/api/docudio/v1/ldap/users'; // Used strictly for local development and reverse proxying requests\n\nvar portlocal = window.env.port === '3001' ? '3000' : '443';\nvar NGINX_API_ROOT = window.env.protocol + '://' + window.env.hostname + ':' + portlocal;\nvar AUTH_PARMS = {\n  client_id: '',\n  redirect_uri: window.env.protocol + '//' + window.env.hostname + ':' + window.env.port + '/auth',\n  code_challenge_method: 'S256',\n  response_type: 'code',\n  scope: ''\n};\nvar Signup = {\n  submitSignup: function submitSignup(options) {\n    return requests.postprops(\"\".concat(NGINX_API_ROOT).concat(USER_ROOT, \"signup\"), options);\n  }\n};\nexport default {\n  Signup: Signup\n};","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/sagas/api/signup/agent.js"],"names":["requests","port","window","env","protocol","API_ROOT","hostname","ROOT_AUTH_URI","REACT_APP_APIGW","TRUSTED_CLAIMS_URI","USER_ROOT","USER_SEARCH_ROOT","portlocal","NGINX_API_ROOT","AUTH_PARMS","client_id","redirect_uri","code_challenge_method","response_type","scope","Signup","submitSignup","options","postprops"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,IAAMC,IAAI,GAAGC,MAAM,CAACC,GAAP,CAAWF,IAAX,KAAoB,MAApB,GAA6B,MAA7B,GAAsC,KAAnD;AACA,IAAMG,QAAQ,GAAGF,MAAM,CAACC,GAAP,CAAWF,IAAX,KAAoB,MAApB,GAA6B,MAA7B,GAAsC,OAAvD;AACA,IAAMI,QAAQ,GAAGD,QAAQ,GAAG,KAAX,GAAmBF,MAAM,CAACC,GAAP,CAAWG,QAA9B,GAAyC,GAAzC,GAA+CL,IAAhE;AACA,IAAMM,aAAa,GAAGL,MAAM,CAACC,GAAP,CAAWK,eAAX,GAA6B,gBAAnD;AACA,IAAMC,kBAAkB,GAAGP,MAAM,CAACC,GAAP,CAAWK,eAAX,GAA6B,0BAAxD;AACA,IAAME,SAAS,GAAG,kBAAlB;AACA,IAAMC,gBAAgB,GAAG,4BAAzB,C,CACA;;AACA,IAAMC,SAAS,GAAGV,MAAM,CAACC,GAAP,CAAWF,IAAX,KAAoB,MAApB,GAA6B,MAA7B,GAAsC,KAAxD;AACA,IAAMY,cAAc,GAAGX,MAAM,CAACC,GAAP,CAAWC,QAAX,GAAsB,KAAtB,GAA8BF,MAAM,CAACC,GAAP,CAAWG,QAAzC,GAAoD,GAApD,GAA0DM,SAAjF;AACA,IAAME,UAAU,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,YAAY,EAAEd,MAAM,CAACC,GAAP,CAAWC,QAAX,GAAsB,IAAtB,GAA6BF,MAAM,CAACC,GAAP,CAAWG,QAAxC,GAAmD,GAAnD,GAAyDJ,MAAM,CAACC,GAAP,CAAWF,IAApE,GAA2E,OAFxE;AAGjBgB,EAAAA,qBAAqB,EAAE,MAHN;AAIjBC,EAAAA,aAAa,EAAE,MAJE;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAAnB;AAQA,IAAMC,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE,sBAACC,OAAD;AAAA,WAAatB,QAAQ,CAACuB,SAAT,WAAsBV,cAAtB,SAAuCH,SAAvC,aAA0DY,OAA1D,CAAb;AAAA;AADD,CAAf;AAIA,eAAe;AACbF,EAAAA,MAAM,EAANA;AADa,CAAf","sourcesContent":["import { requests } from '../../agent'\n\nconst port = window.env.port === '3001' ? '3000' : '443'\nconst protocol = window.env.port === '3001' ? 'http' : 'https'\nconst API_ROOT = protocol + '://' + window.env.hostname + ':' + port\nconst ROOT_AUTH_URI = window.env.REACT_APP_APIGW + '/auth/oauth/v2'\nconst TRUSTED_CLAIMS_URI = window.env.REACT_APP_APIGW + '/auth/oauth/v2/tokeninfo'\nconst USER_ROOT = '/api/docudio/v1/'\nconst USER_SEARCH_ROOT = '/api/docudio/v1/ldap/users'\n// Used strictly for local development and reverse proxying requests\nconst portlocal = window.env.port === '3001' ? '3000' : '443'\nconst NGINX_API_ROOT = window.env.protocol + '://' + window.env.hostname + ':' + portlocal\nconst AUTH_PARMS = {\n  client_id: '',\n  redirect_uri: window.env.protocol + '//' + window.env.hostname + ':' + window.env.port + '/auth',\n  code_challenge_method: 'S256',\n  response_type: 'code',\n  scope: ''\n}\n\nconst Signup = {\n  submitSignup: (options) => requests.postprops(`${NGINX_API_ROOT}${USER_ROOT}signup`, options),\n}\n\nexport default {\n  Signup\n}\n"]},"metadata":{},"sourceType":"module"}