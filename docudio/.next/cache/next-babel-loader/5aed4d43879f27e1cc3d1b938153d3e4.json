{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport appSaga from './app/app-saga';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([appSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/sagas/root-saga.js"],"names":["rootSaga","all","appSaga"],"mappings":";;oDAG0BA,Q;;AAH1B,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,eAAe,SAAWF,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,OAAO,EADC,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects'\nimport appSaga from './app/app-saga'\n\nexport default function * rootSaga () {\n  yield all([\n    appSaga()\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}