{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watcherSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(submitSignup);\n\nimport { takeLeading, call, put } from 'redux-saga/effects';\nimport agent from './agent';\nimport { SIGNUP_REQUESTED, SIGNUP_SUCCESS, SIGNUP_FAILURE } from '../../../actions/signup';\nimport apiCaller from '../api-caller';\nimport app from '../../app/app';\nimport { ADD_MESSAGE } from '../../../actions';\nexport default function watcherSaga() {\n  return _regeneratorRuntime.wrap(function watcherSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLeading(SIGNUP_REQUESTED, submitSignup);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction submitSignup(action) {\n  var payload;\n  return _regeneratorRuntime.wrap(function submitSignup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put({\n            type: ADD_MESSAGE,\n            payload: {\n              message: 'Request is being Submitted',\n              options: {\n                variant: 'info'\n              }\n            }\n          });\n\n        case 3:\n          _context2.next = 5;\n          return call(apiCaller, agent.Signup.submitSignup, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(action.payload)\n          });\n\n        case 5:\n          payload = _context2.sent;\n          _context2.next = 8;\n          return put({\n            type: ADD_MESSAGE,\n            payload: {\n              message: 'Request Submitted Successfully!',\n              options: {\n                variant: 'success'\n              }\n            }\n          });\n\n        case 8:\n          _context2.next = 10;\n          return put({\n            type: SIGNUP_SUCCESS,\n            payload: payload.data\n          });\n\n        case 10:\n          _context2.next = 18;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 16;\n          return put({\n            type: SIGNUP_FAILURE,\n            payload: {\n              message: 'Signup failed, please contact docudio@gmail.com if this persists after refreshing your page'\n            }\n          });\n\n        case 16:\n          _context2.next = 18;\n          return call(app.sendErrorMessage, _context2.t0);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 12]]);\n}","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/sagas/api/signup/index.js"],"names":["watcherSaga","submitSignup","takeLeading","call","put","agent","SIGNUP_REQUESTED","SIGNUP_SUCCESS","SIGNUP_FAILURE","apiCaller","app","ADD_MESSAGE","action","type","payload","message","options","variant","Signup","headers","body","JSON","stringify","data","sendErrorMessage"],"mappings":";;oDAW0BA,W;qDAIfC,Y;;AAfX,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,yBAJP;AAKA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,eAAe,SAAWX,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,WAAW,CAACI,gBAAD,EAAmBL,YAAnB,CAAjB;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIf,SAAWA,YAAX,CAAyBW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEF,WAAR;AAAqBG,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAE,4BAAX;AAAyCC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,OAAO,EAAE;AAAX;AAAlD;AAA9B,WAAD,CAAT;;AAFJ;AAAA;AAIoB,iBAAMd,IAAI,CAACM,SAAD,EAAYJ,KAAK,CAACa,MAAN,CAAajB,YAAzB,EAAuC;AAAEkB,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAAX;AAAmDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,MAAM,CAACE,OAAtB;AAAzD,WAAvC,CAAV;;AAJpB;AAIUA,UAAAA,OAJV;AAAA;AAKI,iBAAMV,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEF,WAAR;AAAqBG,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAE,iCAAX;AAA8CC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,OAAO,EAAE;AAAX;AAAvD;AAA9B,WAAD,CAAT;;AALJ;AAAA;AAMI,iBAAMb,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEN,cAAR;AAAwBO,YAAAA,OAAO,EAAEA,OAAO,CAACS;AAAzC,WAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMnB,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEL,cAAR;AAAwBM,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX;AAAjC,WAAD,CAAT;;AARJ;AAAA;AASI,iBAAMZ,IAAI,CAACO,GAAG,CAACc,gBAAL,eAAV;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLeading, call, put } from 'redux-saga/effects'\nimport agent from './agent'\nimport {\n  SIGNUP_REQUESTED,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE\n} from '../../../actions/signup'\nimport apiCaller from '../api-caller'\nimport app from '../../app/app'\nimport { ADD_MESSAGE } from '../../../actions'\n\nexport default function * watcherSaga () {\n  yield takeLeading(SIGNUP_REQUESTED, submitSignup)\n}\n\nfunction * submitSignup (action) {\n  try {\n    yield put({ type: ADD_MESSAGE, payload: { message: 'Request is being Submitted', options: { variant: 'info' } } })\n\n    const payload = yield call(apiCaller, agent.Signup.submitSignup, { headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(action.payload) })\n    yield put({ type: ADD_MESSAGE, payload: { message: 'Request Submitted Successfully!', options: { variant: 'success' } } })\n    yield put({ type: SIGNUP_SUCCESS, payload: payload.data })\n  } catch (e) {\n    yield put({ type: SIGNUP_FAILURE, payload: { message: 'Signup failed, please contact docudio@gmail.com if this persists after refreshing your page' } })\n    yield call(app.sendErrorMessage, e)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}