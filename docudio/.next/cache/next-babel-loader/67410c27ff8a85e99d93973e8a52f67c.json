{"ast":null,"code":"import logger from \"redux-logger\";\nimport { MakeStore, createWrapper, Context } from \"next-redux-wrapper\";\nimport { reducer, State } from \"../reducers/reducer\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas/root-saga';\nvar initialiseSagaMiddleware = createSagaMiddleware();\nexport var makeStore = function makeStore(context) {\n  return createStore(reducer, applyMiddleware(initialiseSagaMiddleware));\n};\nexport var wrapper = createWrapper < State > (makeStore, {\n  debug: true\n});\ninitialiseSagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["/Users/mkeffele/git_repos/website/docudio/store/index.js"],"names":["logger","MakeStore","createWrapper","Context","reducer","State","createStore","applyMiddleware","compose","createSagaMiddleware","rootSaga","initialiseSagaMiddleware","makeStore","context","wrapper","debug","run"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,qBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,IAAMC,wBAAwB,GAAGF,oBAAoB,EAArD;AAEA,OAAO,IAAMG,SAA2B,GAAG,SAA9BA,SAA8B,CAACC,OAAD;AAAA,SACzCP,WAAW,CAACF,OAAD,EAAUG,eAAe,CAACI,wBAAD,CAAzB,CAD8B;AAAA,CAApC;AAGP,OAAO,IAAMG,OAAO,GAAGZ,aAAa,GAACG,KAAd,IAAqBO,SAAS,EAAE;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAhC,CAAhB;AACPJ,wBAAwB,CAACK,GAAzB,CAA6BN,QAA7B","sourcesContent":["import logger from \"redux-logger\";\nimport { MakeStore, createWrapper, Context } from \"next-redux-wrapper\";\nimport { reducer, State } from \"../reducers/reducer\";\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from '../sagas/root-saga'\n\nconst initialiseSagaMiddleware = createSagaMiddleware()\n\nexport const makeStore: MakeStore<State> = (context: Context) =>\n  createStore(reducer, applyMiddleware(initialiseSagaMiddleware));\n\nexport const wrapper = createWrapper<State>(makeStore, { debug: true });\ninitialiseSagaMiddleware.run(rootSaga)\n"]},"metadata":{},"sourceType":"module"}